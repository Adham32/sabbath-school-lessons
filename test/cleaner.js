#!/usr/bin/env node

/**
 * This is a helper script to clean Arabic, Farsi and potentially Hebrew texts
 * from extra characters, mostly invisible
 *
 * Additionally to replace regular numbers like 1, 2, 3 in it's arabic numeral form.
 * It's it funny that what we call "arabic" numbers are not even used in Arabic writings :D
 */

var fs                  = require("fs-extra"),
    metaMarked          = require("meta-marked"),
    yamljs              = require("yamljs"),
    esrever             = require("esrever");

const execSync = require("child_process").execSync;

var SOURCE_EXTENSION = "md";

var argv = require("optimist")
    .usage("Celaner - cleanses Arabic, Persian and Hebrew content and optionally replaces numerals for Arabic and Persian\n" +
        "Usage: $0 -p [string] -c [boolean] -n [boolean] -r [boolean] -o [boolean] -i [boolean] -h [boolean] -g [boolean]")
    .alias({"p": "path", "c": "clean", "n": "numerals", "r": "reverse", "o": "rereverse", "i": "ignore", "h": "hebrew", "g": "gematria"})
    .describe({
        "p": "path",
        "c": "clean",
        "n": "numerals",
        "r": "reverse",
        "o": "re-reverse numerals",
        "i": "ignore numbers",
        "h": "hebrew",
        "g": "gematria"
    })
    .demand(["p"])
    .default({ "c": false, "n" : false, "r": false, "o": false, "i": false, "h": false, "g": false })
    .argv;

function cleanArabicFarsiHebrewContent(path, clean, numerals, reverse, reverseNumerals, ignoreNumbers, hebrew, gematria){
    var contentFiles = fs.readdirSync(path);

    for (var i = 0; i < contentFiles.length; i++) {
        var extension = contentFiles[i].split(".").pop();
        if (extension !== SOURCE_EXTENSION) continue;

        var read = metaMarked(fs.readFileSync(path + "/" + contentFiles[i], "utf-8"));

        if (clean){
            read.markdown = read.markdown.replace(/(ٓ|ٔ|ـ|ٕ)/g, "");
            read.markdown = read.markdown.replace(/(_){2,}/g, "");
        }

        if (numerals){
            read.markdown = read.markdown.replace(/1/g, "١");
            read.markdown = read.markdown.replace(/2/g, "۲");
            read.markdown = read.markdown.replace(/3/g, "۳");
            read.markdown = read.markdown.replace(/4/g, "۴");
            read.markdown = read.markdown.replace(/5/g, "۵");
            read.markdown = read.markdown.replace(/6/g, "۶");
            read.markdown = read.markdown.replace(/7/g, "۷");
            read.markdown = read.markdown.replace(/8/g, "۸");
            read.markdown = read.markdown.replace(/9/g, "۹");
            read.markdown = read.markdown.replace(/0/g, "۰");
        }

        if (reverse){

            var number_matches_cache = [],
                token = "VAVIVAV";

            if (ignoreNumbers){
                var number_matches_re = /([\d]+[:\-,]?\d?){2,}/g,
                    number_matches = read.markdown.match(number_matches_re);

                if (number_matches){
                    for (var n = 0; n < number_matches.length; n++){
                        var number_match = number_matches[n];
                        number_matches_cache.push(number_match);
                        read.markdown = read.markdown.replace(number_match, token+n);
                    }
                }
            }

            var lines = read.markdown.split(/\r?\n/);

            for (var j = 0; j < lines.length; j++){

                // console.log(lines[j])
                //
                // var diacriticOccurrences = [];
                //
                // var re = /َّ/g,
                //     str = "foobarfoobar";
                // while ((match = re.exec(lines[j])) != null) {
                //     console.log("match found at " + match.index);
                //     diacriticOccurrences.push(match.index);
                // }
                //
                // diacriticOccurrences = diacriticOccurrences.sort();
                //
                // console.log(diacriticOccurrences);
                //
                //

                

                // INSERT GRAPHENES

                // lines[j] = lines[j].replace(/(َّ)/g, "XX");
                //
                // for (var k = 0; k < diacriticOccurrences.length; k++){
                //     lines[j] = [lines[j].slice(0, diacriticOccurrences[k]-(6+(2*k))), "َّ", lines[j].slice(diacriticOccurrences[k]-(6+(2*k)))].join('');
                // }
                //


                // lines[j] = execSync("perl -CS -Mutf8 -E 'say join(\"\", reverse(\"" + lines[j] + "\" =~ /\\X/g))'").toString().trim();
                lines[j] = esrever.reverse(lines[j]);

                // lines[j] = lines[j].replace(/XX/g, "");

                // lines[j] = execSync("perl -CS -Mutf8 -E 'say join(\"\", reverse(\"" + lines[j] + "\" =~ /\\X/g))'").toString().trim();

                // console.log(execSync("perl -CS -Mutf8 -E 'say join(\"\", reverse(\"" + lines[j] + "\" =~ /\\X/g))'").toString().trim());

            }

            read.markdown = lines.join("\n");

            if (ignoreNumbers && number_matches_cache.length) {
                for (var n = 0; n < number_matches_cache.length; n++){
                    read.markdown = read.markdown.replace(esrever.reverse(token+n), number_matches_cache[n]);
                }
            }
        }

        if (reverseNumerals){
            var re = /[\u0660-\u0669\u066F-\u06F9]{2,}/g,
                match = null,
                match_incr=0;

            var matches_counter = read.markdown.match(re);

            if (matches_counter){
                matches_counter = matches_counter.length || 0;

                while ((match = re.exec(read.markdown)) !== null && match_incr <= matches_counter){
                    var occurrence = match[0];
                    occurrence = esrever.reverse(occurrence);
                    read.markdown = read.markdown.substr(0, match.index) + occurrence + read.markdown.substr(match.index + occurrence.length);
                    match_incr++;
                }
            }
        }

        if (gematria){

          var regex = /(א'|ב'|ג'|ד'|ה'|ו'|ז'|ח'|ט'|י'|י"א|י"ב|י"ג|י"ד|ט"ו|ט"ז|י"ז|י"ח|י"ט|כ'|כ"א|כ"ב|כ"ג|כ"ד|כ"ה|כ"ו|כ"ז|כ"ח|כ"ט|ל'|ל"א|ל"ב|ל"ג|ל"ד|ל"ה|ל"ו|ל"ז|ל"ח|ל"ט|מ'|מ"א|מ"ב|מ"ג|מ"ד|מ"ה|מ"ו|מ"ז|מ"ח|מ"ט|נ'|נ"א|נ"ב|נ"ג|נ"ד|נ"ה|נ"ו|נ"ז|נ"ח|נ"ט|ס'|ס"א|ס"ב|ס"ג|ס"ד|ס"ה|ס"ו|ס"ז|ס"ח|ס"ט|ע'|ע"א|ע"ב|ע"ג|ע"ד|ע"ה|ע"ו|ע"ז|ע"ח|ע"ט|פ'|פ"א|פ"ב|פ"ג|פ"ד|פ"ה|פ"ו|פ"ז|פ"ח|פ"ט|צ'|צ"א|צ"ב|צ"ג|צ"ד|צ"ה|צ"ו|צ"ז|צ"ח|צ"ט|ק'|ק"א|ק"ב|ק"ג|ק"ד|ק"ה|ק"ו|ק"ז|ק"ח|ק"ט|ק"י|קי"א|קי"ב|קי"ג|קי"ד|קט"ו|קט"ז|קי"ז|קי"ח|קי"ט|ק"כ|קכ"א|קכ"ב|קכ"ג|קכ"ד|קכ"ה|קכ"ו|קכ"ז|קכ"ח|קכ"ט|ק"ל|קל"א|קל"ב|קל"ג|קל"ד|קל"ה|קל"ו|קל"ז|קל"ח|קל"ט|ק"מ|קמ"א|קמ"ב|קמ"ג|קמ"ד|קמ"ה|קמ"ו|קמ"ז|קמ"ח|קמ"ט|ק"נ|קנ"א|קנ"ב|קנ"ג|קנ"ד|קנ"ה|קנ"ו|קנ"ז|קנ"ח|קנ"ט|ק"ס|קס"א|קס"ב|קס"ג|קס"ד|קס"ה|קס"ו|קס"ז|קס"ח|קס"ט|ק"ע|קע"א|קע"ב|קע"ג|קע"ד|קע"ה|קע"ו|קע"ז|קע"ח|קע"ט|ק"פ|קפ"א|קפ"ב|קפ"ג|קפ"ד|קפ"ה|קפ"ו|קפ"ז|קפ"ח|קפ"ט|ק"צ|קצ"א|קצ"ב|קצ"ג|קצ"ד|קצ"ה|קצ"ו|קצ"ז|קצ"ח|קצ"), ?\d/gu;
              regex = /(א'|ב'|ג'|ד'|ה'|ו'|ז'|ח'|ט'|י'|יא|יב|יג|יד|טו|טז|יז|יח|יט|כ'|כא|כב|כג|כד|כה|כו|כז|כח|כט|ל'|לא|לב|לג|לד|לה|לו|לז|לח|לט|מ'|מא|מב|מג|מד|מה|מו|מז|מח|מט|נ'|נא|נב|נג|נד|נה|נו|נז|נח|נט|ס'|סא|סב|סג|סד|סה|סו|סז|סח|סט|ע'|עא|עב|עג|עד|עה|עו|עז|עח|עט|פ'|פא|פב|פג|פד|פה|פו|פז|פח|פט|צ'|צא|צב|צג|צד|צה|צו|צז|צח|צט|ק'|קא|קב|קג|קד|קה|קו|קז|קח|קט|קי|קיא|קיב|קיג|קיד|קטו|קטז|קיז|קיח|קיט|קכ|קכא|קכב|קכג|קכד|קכה|קכו|קכז|קכח|קכט|קל|קלא|קלב|קלג|קלד|קלה|קלו|קלז|קלח|קלט|קמ|קמא|קמב|קמג|קמד|קמה|קמו|קמז|קמח|קמט|קנ|קנא|קנב|קנג|קנד|קנה|קנו|קנז|קנח|קנט|קס|קסא|קסב|קסג|קסד|קסה|קסו|קסז|קסח|קסט|קע|קעא|קעב|קעג|קעד|קעה|קעו|קעז|קעח|קעט|קפ|קפא|קפב|קפג|קפד|קפה|קפו|קפז|קפח|קפט|קצ|קצא|קצב|קצג|קצד|קצה|קצו|קצז|קצח|קצט)'?, ?\d/gu;
          // var regex = /(א',|ב',|ג',|ד',|ה',|ו',|ז',|ח',|ט',|י',|י"א,|י"ב,|י"ג,|י"ד,|ט"ו,|ט"ז,|י"ז,|י"ח,|י"ט,|כ',|כ"א,|כ"ב,|כ"ג,|כ"ד,|כ"ה,|כ"ו,|כ"ז,|כ"ח,|כ"ט,|ל',|ל"א,|ל"ב,|ל"ג,|ל"ד,|ל"ה,|ל"ו,|ל"ז,|ל"ח,|ל"ט,|מ',|מ"א,|מ"ב,|מ"ג,|מ"ד,|מ"ה,|מ"ו,|מ"ז,|מ"ח,|מ"ט,|נ',|נ"א,|נ"ב,|נ"ג,|נ"ד,|נ"ה,|נ"ו,|נ"ז,|נ"ח,|נ"ט,|ס',|ס"א,|ס"ב,|ס"ג,|ס"ד,|ס"ה,|ס"ו,|ס"ז,|ס"ח,|ס"ט,|ע',|ע"א,|ע"ב,|ע"ג,|ע"ד,|ע"ה,|ע"ו,|ע"ז,|ע"ח,|ע"ט,|פ',|פ"א,|פ"ב,|פ"ג,|פ"ד,|פ"ה,|פ"ו,|פ"ז,|פ"ח,|פ"ט,|צ',|צ"א,|צ"ב,|צ"ג,|צ"ד,|צ"ה,|צ"ו,|צ"ז,|צ"ח,|צ"ט,|ק',|ק"א,|ק"ב,|ק"ג,|ק"ד,|ק"ה,|ק"ו,|ק"ז,|ק"ח,|ק"ט,|ק"י,|קי"א,|קי"ב,|קי"ג,|קי"ד,|קט"ו,|קט"ז,|קי"ז,|קי"ח,|קי"ט,|ק"כ,|קכ"א,|קכ"ב,|קכ"ג,|קכ"ד,|קכ"ה,|קכ"ו,|קכ"ז,|קכ"ח,|קכ"ט,|ק"ל,|קל"א,|קל"ב,|קל"ג,|קל"ד,|קל"ה,|קל"ו,|קל"ז,|קל"ח,|קל"ט,|ק"מ,|קמ"א,|קמ"ב,|קמ"ג,|קמ"ד,|קמ"ה,|קמ"ו,|קמ"ז,|קמ"ח,|קמ"ט,|ק"נ,|קנ"א,|קנ"ב,|קנ"ג,|קנ"ד,|קנ"ה,|קנ"ו,|קנ"ז,|קנ"ח,|קנ"ט,|ק"ס,|קס"א,|קס"ב,|קס"ג,|קס"ד,|קס"ה,|קס"ו,|קס"ז,|קס"ח,|קס"ט,|ק"ע,|קע"א,|קע"ב,|קע"ג,|קע"ד,|קע"ה,|קע"ו,|קע"ז,|קע"ח,|קע"ט,|ק"פ,|קפ"א,|קפ"ב,|קפ"ג,|קפ"ד,|קפ"ה,|קפ"ו,|קפ"ז,|קפ"ח,|קפ"ט,|ק"צ,|קצ"א,|קצ"ב,|קצ"ג,|קצ"ד,|קצ"ה,|קצ"ו,|קצ"ז,|קצ"ח,|קצ",),\d/gu
          //     regex = /(א'|ב'|ג'|ד'|ה'|ו'|ז'|ח'|ט'|י'|י"א|י"ב|י"ג|י"ד|ט"ו|ט"ז|י"ז|י"ח|י"ט|כ'|כ"א|כ"ב|כ"ג|כ"ד|כ"ה|כ"ו|כ"ז|כ"ח|כ"ט|ל'|ל"א|ל"ב|ל"ג|ל"ד|ל"ה|ל"ו|ל"ז|ל"ח|ל"ט|מ'|מ"א|מ"ב|מ"ג|מ"ד|מ"ה|מ"ו|מ"ז|מ"ח|מ"ט|נ'|נ"א|נ"ב|נ"ג|נ"ד|נ"ה|נ"ו|נ"ז|נ"ח|נ"ט|ס'|ס"א|ס"ב|ס"ג|ס"ד|ס"ה|ס"ו|ס"ז|ס"ח|ס"ט|ע'|ע"א|ע"ב|ע"ג|ע"ד|ע"ה|ע"ו|ע"ז|ע"ח|ע"ט|פ'|פ"א|פ"ב|פ"ג|פ"ד|פ"ה|פ"ו|פ"ז|פ"ח|פ"ט|צ'|צ"א|צ"ב|צ"ג|צ"ד|צ"ה|צ"ו|צ"ז|צ"ח|צ"ט|ק'|ק"א|ק"ב|ק"ג|ק"ד|ק"ה|ק"ו|ק"ז|ק"ח|ק"ט|ק"י|קי"א|קי"ב|קי"ג|קי"ד|קט"ו|קט"ז|קי"ז|קי"ח|קי"ט|ק"כ|קכ"א|קכ"ב|קכ"ג|קכ"ד|קכ"ה|קכ"ו|קכ"ז|קכ"ח|קכ"ט|ק"ל|קל"א|קל"ב|קל"ג|קל"ד|קל"ה|קל"ו|קל"ז|קל"ח|קל"ט|ק"מ|קמ"א|קמ"ב|קמ"ג|קמ"ד|קמ"ה|קמ"ו|קמ"ז|קמ"ח|קמ"ט|ק"נ|קנ"א|קנ"ב|קנ"ג|קנ"ד|קנ"ה|קנ"ו|קנ"ז|קנ"ח|קנ"ט|ק"ס|קס"א|קס"ב|קס"ג|קס"ד|קס"ה|קס"ו|קס"ז|קס"ח|קס"ט|ק"ע|קע"א|קע"ב|קע"ג|קע"ד|קע"ה|קע"ו|קע"ז|קע"ח|קע"ט|ק"פ|קפ"א|קפ"ב|קפ"ג|קפ"ד|קפ"ה|קפ"ו|קפ"ז|קפ"ח|קפ"ט|ק"צ|קצ"א|קצ"ב|קצ"ג|קצ"ד|קצ"ה|קצ"ו|קצ"ז|קצ"ח|קצ"ט|) \d/gu


          var match = regex.exec(read.markdown);
          var gematriaMapping = {"א'":"1","ב'":"2","ג'":"3","ד'":"4","ה'":"5","ו'":"6","ז'":"7","ח'":"8","ט'":"9","י'":"10","י\"א":"11","י\"ב":"12","י\"ג":"13","י\"ד":"14","ט\"ו":"15","ט\"ז":"16","י\"ז":"17","י\"ח":"18","י\"ט":"19","כ'":"20","כ\"א":"21","כ\"ב":"22","כ\"ג":"23","כ\"ד":"24","כ\"ה":"25","כ\"ו":"26","כ\"ז":"27","כ\"ח":"28","כ\"ט":"29","ל'":"30","ל\"א":"31","ל\"ב":"32","ל\"ג":"33","ל\"ד":"34","ל\"ה":"35","ל\"ו":"36","ל\"ז":"37","ל\"ח":"38","ל\"ט":"39","מ'":"40","מ\"א":"41","מ\"ב":"42","מ\"ג":"43","מ\"ד":"44","מ\"ה":"45","מ\"ו":"46","מ\"ז":"47","מ\"ח":"48","מ\"ט":"49","נ'":"50","נ\"א":"51","נ\"ב":"52","נ\"ג":"53","נ\"ד":"54","נ\"ה":"55","נ\"ו":"56","נ\"ז":"57","נ\"ח":"58","נ\"ט":"59","ס'":"60","ס\"א":"61","ס\"ב":"62","ס\"ג":"63","ס\"ד":"64","ס\"ה":"65","ס\"ו":"66","ס\"ז":"67","ס\"ח":"68","ס\"ט":"69","ע'":"70","ע\"א":"71","ע\"ב":"72","ע\"ג":"73","ע\"ד":"74","ע\"ה":"75","ע\"ו":"76","ע\"ז":"77","ע\"ח":"78","ע\"ט":"79","פ'":"80","פ\"א":"81","פ\"ב":"82","פ\"ג":"83","פ\"ד":"84","פ\"ה":"85","פ\"ו":"86","פ\"ז":"87","פ\"ח":"88","פ\"ט":"89","צ'":"90","צ\"א":"91","צ\"ב":"92","צ\"ג":"93","צ\"ד":"94","צ\"ה":"95","צ\"ו":"96","צ\"ז":"97","צ\"ח":"98","צ\"ט":"99","ק'":"100","ק\"א":"101","ק\"ב":"102","ק\"ג":"103","ק\"ד":"104","ק\"ה":"105","ק\"ו":"106","ק\"ז":"107","ק\"ח":"108","ק\"ט":"109","ק\"י":"110","קי\"א":"111","קי\"ב":"112","קי\"ג":"113","קי\"ד":"114","קט\"ו":"115","קט\"ז":"116","קי\"ז":"117","קי\"ח":"118","קי\"ט":"119","ק\"כ":"120","קכ\"א":"121","קכ\"ב":"122","קכ\"ג":"123","קכ\"ד":"124","קכ\"ה":"125","קכ\"ו":"126","קכ\"ז":"127","קכ\"ח":"128","קכ\"ט":"129","ק\"ל":"130","קל\"א":"131","קל\"ב":"132","קל\"ג":"133","קל\"ד":"134","קל\"ה":"135","קל\"ו":"136","קל\"ז":"137","קל\"ח":"138","קל\"ט":"139","ק\"מ":"140","קמ\"א":"141","קמ\"ב":"142","קמ\"ג":"143","קמ\"ד":"144","קמ\"ה":"145","קמ\"ו":"146","קמ\"ז":"147","קמ\"ח":"148","קמ\"ט":"149","ק\"נ":"150","קנ\"א":"151","קנ\"ב":"152","קנ\"ג":"153","קנ\"ד":"154","קנ\"ה":"155","קנ\"ו":"156","קנ\"ז":"157","קנ\"ח":"158","קנ\"ט":"159","ק\"ס":"160","קס\"א":"161","קס\"ב":"162","קס\"ג":"163","קס\"ד":"164","קס\"ה":"165","קס\"ו":"166","קס\"ז":"167","קס\"ח":"168","קס\"ט":"169","ק\"ע":"170","קע\"א":"171","קע\"ב":"172","קע\"ג":"173","קע\"ד":"174","קע\"ה":"175","קע\"ו":"176","קע\"ז":"177","קע\"ח":"178","קע\"ט":"179","ק\"פ":"180","קפ\"א":"181","קפ\"ב":"182","קפ\"ג":"183","קפ\"ד":"184","קפ\"ה":"185","קפ\"ו":"186","קפ\"ז":"187","קפ\"ח":"188","קפ\"ט":"189","ק\"צ":"190","קצ\"א":"191","קצ\"ב":"192","קצ\"ג":"193","קצ\"ד":"194","קצ\"ה":"195","קצ\"ו":"196","קצ\"ז":"197","קצ\"ח":"198","קצ\"ט":"199"};
              gematriaMapping = {"א'":"1","ב'":"2","ג'":"3","ד'":"4","ה'":"5","ו'":"6","ז'":"7","ח'":"8","ט'":"9","י'":"10","יא":"11","יב":"12","יג":"13","יד":"14","טו":"15","טז":"16","יז":"17","יח":"18","יט":"19","כ'":"20","כא":"21","כב":"22","כג":"23","כד":"24","כה":"25","כו":"26","כז":"27","כח":"28","כט":"29","ל'":"30","לא":"31","לב":"32","לג":"33","לד":"34","לה":"35","לו":"36","לז":"37","לח":"38","לט":"39","מ'":"40","מא":"41","מב":"42","מג":"43","מד":"44","מה":"45","מו":"46","מז":"47","מח":"48","מט":"49","נ'":"50","נא":"51","נב":"52","נג":"53","נד":"54","נה":"55","נו":"56","נז":"57","נח":"58","נט":"59","ס'":"60","סא":"61","סב":"62","סג":"63","סד":"64","סה":"65","סו":"66","סז":"67","סח":"68","סט":"69","ע'":"70","עא":"71","עב":"72","עג":"73","עד":"74","עה":"75","עו":"76","עז":"77","עח":"78","עט":"79","פ'":"80","פא":"81","פב":"82","פג":"83","פד":"84","פה":"85","פו":"86","פז":"87","פח":"88","פט":"89","צ'":"90","צא":"91","צב":"92","צג":"93","צד":"94","צה":"95","צו":"96","צז":"97","צח":"98","צט":"99","ק'":"100","קא":"101","קב":"102","קג":"103","קד":"104","קה":"105","קו":"106","קז":"107","קח":"108","קט":"109","קי":"110","קיא":"111","קיב":"112","קיג":"113","קיד":"114","קטו":"115","קטז":"116","קיז":"117","קיח":"118","קיט":"119","קכ":"120","קכא":"121","קכב":"122","קכג":"123","קכד":"124","קכה":"125","קכו":"126","קכז":"127","קכח":"128","קכט":"129","קל":"130","קלא":"131","קלב":"132","קלג":"133","קלד":"134","קלה":"135","קלו":"136","קלז":"137","קלח":"138","קלט":"139","קמ":"140","קמא":"141","קמב":"142","קמג":"143","קמד":"144","קמה":"145","קמו":"146","קמז":"147","קמח":"148","קמט":"149","קנ":"150","קנא":"151","קנב":"152","קנג":"153","קנד":"154","קנה":"155","קנו":"156","קנז":"157","קנח":"158","קנט":"159","קס":"160","קסא":"161","קסב":"162","קסג":"163","קסד":"164","קסה":"165","קסו":"166","קסז":"167","קסח":"168","קסט":"169","קע":"170","קעא":"171","קעב":"172","קעג":"173","קעד":"174","קעה":"175","קעו":"176","קעז":"177","קעח":"178","קעט":"179","קפ":"180","קפא":"181","קפב":"182","קפג":"183","קפד":"184","קפה":"185","קפו":"186","קפז":"187","קפח":"188","קפט":"189","קצ":"190","קצא":"191","קצב":"192","קצג":"193","קצד":"194","קצה":"195","קצו":"196","קצז":"197","קצח":"198","קצט":"199"};

          // var gematriaKeys = Object.keys(gematriaMapping)

          // for (var gmk = 0; gmk < gematriaKeys.length; gmk++) {
          //    delete gematriaMapping[gematriaKeys[gmk]];
          //  }

          let max = 1;

          while (match !== null) {
            
            var start = match.index,
                end = match[0].length-1;
            // if (read.markdown[start-1] === "י") {
            //     start--;
            // }
            // if (read.markdown[end+1] === " ") {
            //     end++;
            // }

            read.markdown = read.markdown.substr(0, start) + gematriaMapping[match[1]]+":" + read.markdown.substr(start+end);
            match = regex.exec(read.markdown);
          }
        }
        fs.outputFileSync(path+"/"+contentFiles[i], "---\n" + yamljs.stringify(read.meta, 4) + "\n---" + read.markdown);
    }
}

cleanArabicFarsiHebrewContent(argv.p, argv.c, argv.n, argv.r, argv.o, argv.i, argv.h,  argv.g);